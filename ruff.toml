target-version = "py312"
line-length = 88
indent-width = 4

# Enable auto-fixing for all fixable rules
fix = true
show-fixes = true

# Exclude directories
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

[lint]
select = [
    "E",    # pycodestyle (Error)
    "W",    # pycodestyle (Warning)
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "N",    # pep8-naming
    "C90",  # mccabe complexity
    "S",    # flake8-bandit (security)
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "PL",   # Pylint
    "RUF",  # Ruff-specific rules
]

# Rules to ignore
ignore = [
    "E501",   # Line too long (handled by formatter)
    "S104",   # Possible binding to all interfaces
    "PLR0913", # Too many arguments to function call
]

fixable = ["ALL"]
unfixable = []

[lint.per-file-ignores]
# Test files have different requirements
"tests/**/*.py" = [
    "S101",    # Use of assert detected
    "PLR2004", # Magic value used in comparison
    "ARG001",  # Unused function argument
]

[lint.isort]
known-first-party = ["src"]
section-order = [
    "future", 
    "standard-library", 
    "third-party", 
    "first-party", 
    "local-folder"
]

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"